services:
  forgejo:
    image: codeberg.org/forgejo/forgejo:11
    container_name: forgejo
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=db:5432
      - FORGEJO__database__NAME=${DB_NAME}
      - FORGEJO__database__USER=${DB_USER}
      - FORGEJO__database__PASSWD=${DB_PWD}
      - FORGEJO__oauth2_client__ENABLE_AUTO_REGISTRATION=${ENABLE_AUTO_REGISTRATION}
      - FORGEJO__openid__ENABLE_OPENID_SIGNIN=${ENABLE_OPENID_SIGNIN}
      - FORGEJO__webhook__ALLOWED_HOST_LIST=${ALLOWED_HOST_LIST}
    restart: unless-stopped
    networks:
      - forgejo
      - frontend
    volumes:
      - ${CONFIG_PATH}/app:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "222:222"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SUBDOMAIN}.rule=Host(`${SUBDOMAIN}.bowline.im`)"
      - "traefik.http.services.${SUBDOMAIN}.loadbalancer.server.port=3000"
      - "traefik.http.routers.${SUBDOMAIN}.tls=true"
      - "traefik.http.routers.${SUBDOMAIN}.tls.certresolver=myresolver"
      # Container registry route for /v2 path
      - "traefik.http.routers.${SUBDOMAIN}-registry.rule=Host(`${SUBDOMAIN}.bowline.im`) && PathPrefix(`/v2`)"
      - "traefik.http.routers.${SUBDOMAIN}-registry.service=${SUBDOMAIN}"
      - "traefik.http.routers.${SUBDOMAIN}-registry.tls=true"
      - "traefik.http.routers.${SUBDOMAIN}-registry.tls.certresolver=myresolver"
      # Proxy headers middleware
      - "traefik.http.middlewares.${SUBDOMAIN}-headers.headers.customrequestheaders.X-Real-IP="
      - "traefik.http.middlewares.${SUBDOMAIN}-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.${SUBDOMAIN}-headers.headers.customrequestheaders.X-Forwarded-For="
      # Body size limit middleware
      - "traefik.http.middlewares.${SUBDOMAIN}-bodysize.buffering.maxRequestBodyBytes=536870912"
      # Apply middlewares
      - "traefik.http.routers.${SUBDOMAIN}.middlewares=${SUBDOMAIN}-headers,${SUBDOMAIN}-bodysize"
      - "traefik.http.routers.${SUBDOMAIN}-registry.middlewares=${SUBDOMAIN}-headers,${SUBDOMAIN}-bodysize"

  db:
    image: postgres:14
    container_name: forgejo-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - forgejo
    volumes:
      - ${CONFIG_PATH}/db:/var/lib/postgresql/data

  # https://forgejo.org/docs/latest/admin/runner-installation/
  docker-in-docker:
    image: docker:dind
    container_name: docker-in-docker
    privileged: true
    command: ["dockerd", "-H", "tcp://0.0.0.0:2375", "--tls=false"]
    restart: unless-stopped
    networks:
      - runner

  # https://forgejo.org/docs/latest/admin/runner-installation/
  forgejo-runner:
    image: data.forgejo.org/forgejo/runner:4.0.0
    links:
      - docker-in-docker
    depends_on:
      docker-in-docker:
        condition: service_started
    container_name: forgejo-runner
    environment:
      DOCKER_HOST: tcp://docker-in-docker:2375
    # User without root privileges, but with access to `./data`.
    user: 1000:1000
    volumes:
      - ${CONFIG_PATH}/runner:/data
    restart: unless-stopped
    # Use this one for the first time
    #command: '/bin/sh -c "while : ; do sleep 1 ; done ;"'
    # and this one going forwards
    command: '/bin/sh -c "sleep 5; forgejo-runner daemon"'
    networks:
      - runner
      - forgejo

networks:
  forgejo:
  runner:
  frontend:
    external: true
